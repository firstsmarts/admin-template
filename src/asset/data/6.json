{
    "title": "APK仿冒分析",
    "type": 2,
    "kvm": "pack18",
    "content": "<div><p>应用权限分析</p><p>本课时将会结合应用示例，讲解对移动应用进行仿冒件分析的办法。</p><h3>使用工具：</h3><p>移动应用静态分析工具</p><p><span><img src='https://wiki.avlyun.org/download/attachments/55063021/image2018-1-8_13-48-12.png?version=1&amp;modificationDate=1515481915190&amp;api=v2'></span></p><p>此工具静态分析与漏洞分析的详细功能已经在之前的课时中进行过介绍，本课时将具体使用到该工具的对比分析功能，来将原应用与需要检测的应用进行对比分析，达到检测重打包应用的效果。</p><h3>示例操作：</h3><p>1、在虚拟机环境中打开<span>移动应用静态分析工具，并加载</span>“案例”文件夹中的“原文件.APK”，在如下的页面中，点击菜单栏中的“对比分析”按键：</p><p><span><img src='https://wiki.avlyun.org/download/attachments/55063021/image2018-1-9_16-12-58.png?version=1&amp;modificationDate=1515485579291&amp;api=v2'></span></p><p>2、在打开的加载窗口中选择同样在“案例”文件夹中的“对比应用.apk”，可以看到工具的界面进行了切换，显示了如下的页面：</p><p><span><img src='https://wiki.avlyun.org/download/attachments/55063021/image2018-1-9_16-14-51.png?version=1&amp;modificationDate=1515485691700&amp;api=v2'></span>此页面是对原应用与需要对比的应用进行了同屏的对比分析的结果。上面界面展示的是APK包结构的对比结果，如之前的课时所描述的，APK文件实际是对多个文件进行打包后的压缩包，从上述的结构对比图中，可以发现，两个文件的APK文件结构相差甚远，那么是什么原因导致的呢？</p><p>3、点击工具栏上的<span><img src='https://wiki.avlyun.org/download/thumbnails/55063021/image2018-1-9_16-23-28.png?version=1&amp;modificationDate=1515486212059&amp;api=v2'></span>DetailDiff图标，可以看到如下图所示：</p><p><span><img src='https://wiki.avlyun.org/download/attachments/55063021/image2018-1-9_16-22-57.png?version=1&amp;modificationDate=1515486177905&amp;api=v2'></span>两个APK文件均是美团的应用，但是从大小上可以看出原文件相比，对比分析用的应用体积上要小很多。</p><p>4、在菜单栏点击<span><img src='https://wiki.avlyun.org/download/thumbnails/55063021/image2018-1-9_17-0-39.png?version=1&amp;modificationDate=1515488439639&amp;api=v2'></span>APKDiff视图，回到刚载入时的页面，经过对比可以很快发现原文件在APK包必须的文件之上，多了很多额外的文件，并且原文件是存在多dex文件，这点在对比分析的文件中并不存在。同时，比较对应的资源目录res和assets，可以看到原文件的资源文件大小已经数倍于对比文件，具体点开其路径，可以看到确实相较原文件，对比分析用的APK文件少了很多资源文件路径，相同的路境内存储的资源文件也较原文较少。</p><p><span><img src='https://wiki.avlyun.org/download/attachments/55063021/image2018-1-9_17-8-46.png?version=1&amp;modificationDate=1515488927049&amp;api=v2'></span></p><p>5、在此界面内双击classes.dex文件，两边文件都更深地进入一层，查看到classes.dex的目录结构视图：</p><p><span><img src='https://wiki.avlyun.org/download/attachments/55063021/image2018-1-9_17-17-27.png?version=1&amp;modificationDate=1515489447955&amp;api=v2'></span></p><p>可以看到两个安装包的classes.dex文件的结构也是完全的不同，这让我们怀疑两个应用的功能与业务是否相同。</p><p>6、这时点击菜单栏中的<span><img src='https://wiki.avlyun.org/download/thumbnails/55063021/image2018-1-9_17-46-27.png?version=1&amp;modificationDate=1515491188051&amp;api=v2'></span>CertDiff，可以看到两个签名文件完全不同，原文件为美团的签名，而对比用文件则不是，这时我们可以判断：对比用APK文件为仿冒件。</p><p><span><img src='https://wiki.avlyun.org/download/attachments/55063021/image2018-1-9_17-46-6.png?version=1&amp;modificationDate=1515491166910&amp;api=v2'></span></p><p>如之前所提到的，通过证书签名可以很有效地区分一个应用是否为官方应用，那么在判定了对比应用为仿冒件后，可以进一步去确定其攻击意图了。</p><p>7、点击菜单栏中的<span><img src='https://wiki.avlyun.org/download/thumbnails/55063021/image2018-1-9_17-57-10.png?version=1&amp;modificationDate=1515491830968&amp;api=v2'></span>StringDiff，可以看到涉及APK和设计URL的字符串在对比应用里和原应用里均存在着较大的不同。</p><p><span><img src='https://wiki.avlyun.org/download/attachments/55063021/image2018-1-9_18-12-48.png?version=1&amp;modificationDate=1515492768576&amp;api=v2'></span></p><p><strong>那么，从这些有差异的字符串信息入手，则可以给我们提供很好的对仿冒件的分析起点。</strong></p><p>8、返回到移动应用静态分析工具的主界面，加载刚才的“对比应用.apk”，在视图标签中选择'String'，即可看到该APK内包含的各类字符串信息，如刚才对比窗口中一样。此时点击对应的字符串则可看到应用该字符串的路径，此时即可按照第二课时中介绍的，点击路径进行具体的代码分析了。</p><p><span><img src='https://wiki.avlyun.org/download/attachments/55063021/image2018-1-9_18-18-56.png?version=1&amp;modificationDate=1515493137249&amp;api=v2'></span></p></div>"
}